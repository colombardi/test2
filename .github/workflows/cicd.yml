# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CICD pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  id-token: write
  security-events: write
  actions: read
  packages: read







jobs:
  Compile:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: |
          mvn -B package --file pom.xml
          mvn compile

  Security-trivy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
  
    - name: Trivy installation
      run: | #per comandi multilinea
        sudo apt-get install wget gnupg
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
        echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb generic main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update -y
        sudo apt-get install trivy -y

        
    - name: Trivy fs scan
      run: trivy fs --format table -o report.json .

    - name: Gitleaks installation #trova file sensibili hardcoded   
      run: sudo apt install gitleaks -y 

    - name: Gitleaks code scan
      run: gitleaks detect source . -r gitleaksReport.json -f json 

  Security-semgrep:
    needs: Security-trivy #blocca l'esecuzione parallela
                          #fa eseguire questo job dopo Security-trivy
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
  
    - name: Semgrep & phyton installation
      run: | #per comandi multilinea
        sudo apt update && sudo apt install -y python3 python3-pip
        pip3 install semgrep
        
    - name: Semgrep scan
      run: semgrep --config=auto .
    - name: Semgrep ci
      env:
        SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
      run:  | 
            semgrep login
            semgrep ci
     

    

   
